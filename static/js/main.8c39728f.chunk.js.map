{"version":3,"sources":["components/KanbanCard/KanbanCard.tsx","components/TodoCard/TodoCard.tsx","components/KanbanColumn/KanbanColumn.tsx","components/KanbanColumnTitle/KanbanColumnTitle.tsx","components/NewTaskCard/NewTaskCard.tsx","components/Todo/Todo.tsx","utils/formatTime.tsx","components/InProgressCard/InProgressCard.tsx","components/InProgress/InProgress.tsx","components/DoneCard/DoneCard.tsx","constants/hourPrice.tsx","components/Done/Done.tsx","utils/config.tsx","utils/api.tsx","App.tsx","index.tsx"],"names":["KanbanCard","text","info","children","Card","className","TodoCard","id","onStart","Button","variant","onClick","KanbanColumn","Col","md","lg","bg","Body","KanbanColumnTitle","count","title","NewTaskCard","onAdd","showCard","task","useRef","useEffect","current","focus","Form","onSubmit","evt","preventDefault","value","Control","type","name","placeholder","ref","Todo","list","useState","showNewTaskCard","setNewTaskCard","length","map","size","formatTime","timer","hours","Math","floor","toString","minutes","seconds","addZero","val","InProgressCard","date","onFinish","setTimer","currentDate","Date","getTime","elapsed","now","setTime","timerId","window","setInterval","prevTimer","clearInterval","InProgress","DoneCard","finished","startSeconds","finishSeconds","total","toFixed","apiConfig","BASE_URL","HEADERS","Accept","apiRoutes","api","parameters","baseUrl","headers","this","path","a","fetch","method","res","ok","json","statusError","message","Error","newTask","body","JSON","stringify","status","App","todo","setTodo","inProgress","setInProgress","done","setDone","getInitialData","getData","kanbanData","filter","el","console","log","handleAddTask","random","substr","postData","prevState","handleStartTask","toISOString","patchData","find","handleFinishTask","Container","fluid","Row","Done","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c39728f.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { CardText } from 'react-bootstrap-icons';\nimport './KanbanCard.css';\n\ntype KanbanCardProps = {\n  text?: string;\n  info?: string;\n  children?: ReactNode;\n};\n\nconst KanbanCard: FC<KanbanCardProps> = ({\n  text,\n  info,\n  children,\n}: KanbanCardProps) => (\n  <Card className=\"kanban-card d-flex flex-row p-2 justify-content-between align-items-center\">\n    <div className=\"align-self-start\">\n      <p className=\"kanban-card__text d-flex align-items-center mb-2\">\n        <CardText className=\"mr-2 flex-shrink-0\" />\n        {text}\n      </p>\n      {info && <p className=\"kanban-card__info ml-4 my-0 text-muted\">{info}</p>}\n    </div>\n    {children}\n  </Card>\n);\n\nexport default KanbanCard;\n","import { FC } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport KanbanCard from '../KanbanCard/KanbanCard';\nimport { CardProps } from '../../models/cardProps.model';\n\nconst TodoCard: FC<CardProps> = ({ id, text, onStart }: CardProps) => (\n  <KanbanCard text={text}>\n    <Button\n      variant=\"primary\"\n      className=\"m-2 mr-3\"\n      onClick={() => onStart(id)}\n    >\n      Start\n    </Button>\n  </KanbanCard>\n);\n\nexport default TodoCard;\n","import { FC, ReactNode } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport './KanbanColumn.css';\n\ntype KanbanColumnProps = {\n  children: ReactNode;\n};\n\nconst KanbanColumn: FC<KanbanColumnProps> = ({ children }: KanbanColumnProps) => (\n  <Col className=\"px-0 mb-3\" md={12} lg={4}>\n    <Card bg=\"light\" className=\"column-content h-100\">\n      <Card.Body className=\"p-2 d-flex flex-column\">{children}</Card.Body>\n    </Card>\n  </Col>\n);\n\nexport default KanbanColumn;\n","import { FC } from 'react';\nimport './KanbanColumnTitle.css';\n\ntype KanbanColumnTitleProps = {\n  count: number;\n  title: string;\n};\n\nconst KanbanColumnTitle: FC<KanbanColumnTitleProps> = ({\n  count,\n  title,\n}: KanbanColumnTitleProps) => (\n  <h6 className=\"kanban-column__title card-title d-flex align-items-center\">\n    <span className=\"kanban-column__counter rounded-pill text-muted ml-1 mr-2\">\n      {count}\n    </span>\n    {title}\n  </h6>\n);\n\nexport default KanbanColumnTitle;\n","import {\n  FC, SyntheticEvent, useRef, useEffect,\n} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport KanbanCard from '../KanbanCard/KanbanCard';\n\ninterface NewTaskCardProps extends Record<string, any> {}\n\nconst NewTaskCard: FC<NewTaskCardProps> = ({\n  onAdd,\n  showCard,\n}: NewTaskCardProps) => {\n  const task = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = (evt: SyntheticEvent) => {\n    evt.preventDefault();\n    if (task.current) {\n      onAdd(task.current.value);\n    }\n    showCard(false);\n  };\n\n  useEffect(() => {\n    task.current?.focus();\n  }, []);\n\n  return (\n    <KanbanCard>\n      <Form\n        className=\"flex-grow-1 d-flex align-items-center\"\n        onSubmit={handleSubmit}\n      >\n        <Form.Control\n          type=\"text\"\n          name=\"task\"\n          placeholder=\"Add a new task\"\n          ref={task}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"outline-primary\"\n          className=\"m-2 mr-3\"\n          onClick={() => onAdd}\n        >\n          Add\n        </Button>\n      </Form>\n    </KanbanCard>\n  );\n};\n\nexport default NewTaskCard;\n","import { FC, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Plus } from 'react-bootstrap-icons';\nimport TodoCard from '../TodoCard/TodoCard';\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\nimport KanbanColumnTitle from '../KanbanColumnTitle/KanbanColumnTitle';\nimport SectionProps from '../../models/sectionProps.model';\nimport NewTaskCard from '../NewTaskCard/NewTaskCard';\nimport './Todo.css';\n\nconst Todo: FC<SectionProps> = ({ list, onAdd, onStart }: SectionProps) => {\n  const [showNewTaskCard, setNewTaskCard] = useState<boolean>(false);\n\n  return (\n    <KanbanColumn>\n      <KanbanColumnTitle count={list.length} title=\"To do\" />\n      {list.map((task) => (\n        <TodoCard\n          key={`${task.id}${task.task}`}\n          id={task.id}\n          text={task.task}\n          onStart={onStart}\n        />\n      ))}\n      {showNewTaskCard && (\n        <NewTaskCard onAdd={onAdd} showCard={setNewTaskCard} />\n      )}\n      <Button\n        variant=\"outline-dark\"\n        className=\"todo__new-task-button my-3 mx-auto pl-2 pr-3 d-flex align-items-center\"\n        onClick={() => setNewTaskCard(true)}\n      >\n        <Plus className=\"todo__plus-symbol\" size={24} />\n        <span>New task</span>\n      </Button>\n    </KanbanColumn>\n  );\n};\n\nexport default Todo;\n","const formatTime = (timer: number): string => {\n  let hours = Math.floor(timer / 3600).toString();\n  let minutes = Math.floor((timer % 3600) / 60).toString();\n  let seconds = Math.floor(timer % 60).toString();\n\n  const addZero = (val: string) => {\n    if (val.length === 1) {\n      return `0${val}`;\n    }\n    return val;\n  };\n\n  hours = addZero(hours);\n  minutes = addZero(minutes);\n  seconds = addZero(seconds);\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n\nexport default formatTime;\n","import { FC, useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport KanbanCard from '../KanbanCard/KanbanCard';\nimport { CardProps } from '../../models/cardProps.model';\nimport formatTime from '../../utils/formatTime';\n\nconst InProgressCard: FC<CardProps> = ({\n  id,\n  text,\n  date,\n  onFinish,\n}: CardProps) => {\n  const [timer, setTimer] = useState<number>(0);\n\n  const setTime = (currentDate: string) => {\n    const seconds = new Date(currentDate).getTime();\n    const elapsed = (Date.now() - seconds) / 1000;\n    setTimer(elapsed);\n  };\n\n  useEffect(() => {\n    setTime(date!);\n    const timerId = window.setInterval(() => {\n      setTimer((prevTimer) => prevTimer + 1);\n    }, 1000);\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, [date]);\n\n  return (\n    <>\n      <KanbanCard text={text} info={formatTime(timer)}>\n        <Button\n          variant=\"success\"\n          className=\"m-2 mr-3\"\n          onClick={() => onFinish(id)}\n        >\n          Resolve\n        </Button>\n      </KanbanCard>\n    </>\n  );\n};\n\nexport default InProgressCard;\n","import { FC } from 'react';\nimport InProgressCard from '../InProgressCard/InProgressCard';\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\nimport KanbanColumnTitle from '../KanbanColumnTitle/KanbanColumnTitle';\nimport SectionProps from '../../models/sectionProps.model';\n\nconst InProgress: FC<SectionProps> = ({ list, onFinish }: SectionProps) => (\n  <KanbanColumn>\n    <KanbanColumnTitle count={list.length} title=\"In progress\" />\n    {list.map((task) => (\n      <InProgressCard\n        key={`${task.id}${task.task}`}\n        id={task.id}\n        text={task.task}\n        date={task.date}\n        onFinish={onFinish}\n      />\n    ))}\n  </KanbanColumn>\n);\n\nexport default InProgress;\n","import { FC } from 'react';\nimport KanbanCard from '../KanbanCard/KanbanCard';\nimport { CardProps } from '../../models/cardProps.model';\nimport hourPrice from '../../constants/hourPrice';\n\nconst DoneCard: FC<CardProps> = ({ text, date, finished }: CardProps) => {\n  const startSeconds = new Date(date!).getTime();\n  const finishSeconds = new Date(finished!).getTime();\n  const hours: number = (finishSeconds - startSeconds) / 1000 / 60 / 60;\n  const total: string = `$${(hourPrice * hours).toFixed(2)}`;\n\n  return <KanbanCard text={text} info={total} />;\n};\n\nexport default DoneCard;\n","const hourPrice: number = 4.5;\n\nexport default hourPrice;\n","import { FC } from 'react';\nimport DoneCard from '../DoneCard/DoneCard';\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\nimport KanbanColumnTitle from '../KanbanColumnTitle/KanbanColumnTitle';\nimport SectionProps from '../../models/sectionProps.model';\n\nconst InProgress: FC<SectionProps> = ({ list }: SectionProps) => (\n  <KanbanColumn>\n    <KanbanColumnTitle count={list.length} title=\"Done\" />\n    {list.map((task) => (\n      <DoneCard\n        key={`${task.id}${task.task}`}\n        id={task.id}\n        text={task.task}\n        date={task.date}\n        finished={task.finished}\n      />\n    ))}\n  </KanbanColumn>\n);\n\nexport default InProgress;\n","const apiConfig = {\n  BASE_URL: 'https://api.anyway.catlogic.ru',\n  HEADERS: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n};\n\nconst apiRoutes = {\n  MAIN: '/kanban',\n  START: '/kanban/start',\n  FINISH: '/kanban/finish',\n};\n\nexport { apiConfig, apiRoutes };\n","import { apiConfig } from './config';\n\nclass Api {\n  private baseUrl: string;\n\n  private headers: {\n    'Content-Type': string;\n    Accept: string;\n  };\n\n  constructor(parameters: any) {\n    this.baseUrl = parameters.baseUrl;\n    this.headers = parameters.headers;\n  }\n\n  async getData(path: string) {\n    const res = await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.headers,\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    const statusError = await res.json();\n    const { message } = statusError;\n    throw new Error(message);\n  }\n\n  async postData(path: string, newTask: { id: string; task: string }) {\n    const { id, task } = newTask;\n    const res = await fetch(`${this.baseUrl}${path}`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({ id, task }),\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    const statusError = await res.json();\n    const { message } = statusError;\n    throw new Error(message);\n  }\n\n  async patchData(\n    path: string,\n    task: { id: string; date: string; status: string },\n  ) {\n    const { id, date, status } = task;\n    const res = await fetch(`${this.baseUrl}${path}`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({ id, date, status }),\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    const statusError = await res.json();\n    const { message } = statusError;\n    throw new Error(message);\n  }\n}\n\nconst api = new Api({\n  baseUrl: apiConfig.BASE_URL,\n  headers: apiConfig.HEADERS,\n});\n\nexport default api;\n","import { FC, useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Todo from './components/Todo/Todo';\nimport InProgress from './components/InProgress/InProgress';\nimport Done from './components/Done/Done';\nimport { KanbanItem } from './models/kanban.model';\nimport api from './utils/api';\nimport { apiRoutes } from './utils/config';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todo, setTodo] = useState<KanbanItem[]>([]);\n  const [inProgress, setInProgress] = useState<KanbanItem[]>([]);\n  const [done, setDone] = useState<KanbanItem[]>([]);\n\n  const getInitialData = async () => {\n    try {\n      const kanbanData = await api.getData(apiRoutes.MAIN);\n      setTodo(\n        kanbanData.filter((el: Record<string, any>) => el.status === 'todo'),\n      );\n      setInProgress(\n        kanbanData.filter((el: Record<string, any>) => el.status === 'progress'),\n      );\n      setDone(\n        kanbanData.filter((el: Record<string, any>) => el.status === 'done'),\n      );\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  const handleAddTask = async (task: string) => {\n    const id = `_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n      const addTaskStatus = await api.postData(apiRoutes.MAIN, { id, task });\n      if (addTaskStatus) {\n        setTodo((prevState) => [\n          ...prevState,\n          {\n            id,\n            task,\n          },\n        ]);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error.message);\n    }\n  };\n\n  const handleStartTask = async (id: string) => {\n    const date = new Date().toISOString();\n    try {\n      const startTaskStatus = await api.patchData(apiRoutes.START, {\n        id,\n        date,\n        status: 'progress',\n      });\n      if (startTaskStatus) {\n        const task: KanbanItem = todo.find((el) => el.id === id)!;\n        setTodo((prevState) => prevState.filter((el) => el.id !== id));\n        setInProgress((prevState) => [\n          ...prevState,\n          { ...task, date, status: 'progress' },\n        ]);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error.message);\n    }\n  };\n\n  const handleFinishTask = async (id: string) => {\n    const date = new Date().toISOString();\n    try {\n      const finishTaskStatus = await api.patchData(apiRoutes.FINISH, {\n        id,\n        date,\n        status: 'done',\n      });\n      if (finishTaskStatus) {\n        const task: KanbanItem = inProgress.find((el) => el.id === id)!;\n        setInProgress((prevState) => prevState.filter((el) => el.id !== id));\n        setDone((prevState) => [\n          ...prevState,\n          { ...task, finished: date, status: 'done' },\n        ]);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <Container fluid=\"lg\" className=\"app pt-4 pb-1 min-vh-100 d-flex flex-column\">\n      <h5 className=\"app__header\">Anyway Labs Test Project</h5>\n      <p className=\"app__sub-header text-muted\">Just some good deeds</p>\n      <Row className=\"d-flex flex-grow-1 px-1\">\n        <Todo list={todo} onAdd={handleAddTask} onStart={handleStartTask} />\n        <InProgress list={inProgress} onFinish={handleFinishTask} />\n        <Done list={done} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}